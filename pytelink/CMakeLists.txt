option(BUILD_FOR_PYTHON_3 "Build wrapper for Python 3" OFF)
if (BUILD_FOR_PYTHON_3)
  find_package (Python3 COMPONENTS Interpreter Development REQUIRED)
  set(PyIncDirs ${Python3_INCLUDE_DIRS})
  set(PyLibDirs ${Python3_LIBRARY_DIRS})
  set(PyLibs ${Python3_LIBRARIES})
  set(PyInstallDir ${Python3_STDLIB})
else()
  find_package (Python2 COMPONENTS Interpreter Development REQUIRED)
  set(PyIncDirs ${Python2_INCLUDE_DIRS})
  set(PyLibDirs ${Python2_LIBRARY_DIRS})
  set(PyLibs ${Python2_LIBRARIES})
  set(PyInstallDir ${Python2_STDLIB})
endif()
FIND_PACKAGE(Boost COMPONENTS python)
IF(Boost_FOUND)
  add_library(telink_wrapper SHARED telink_python.cxx)
  target_include_directories(telink_wrapper PUBLIC ${Boost_INCLUDE_DIRS} ${PyIncDirs})
  target_link_directories(telink_wrapper PUBLIC ${Boost_LIBRARY_DIRS} ${PyLibDirs})
  target_link_libraries(telink_wrapper telink_light_o ${Boost_LIBRARIES} ${PyLibs} ${TINYB_LIBRARIES} ${OPENSSL_CRYPTO_LIBRARIES})
  set_target_properties(telink_wrapper PROPERTIES PREFIX "")
  set_target_properties(telink_wrapper PROPERTIES SUFFIX ".so")
  
  configure_file("__init__.py" "__init__.py" COPYONLY)
  
	install( FILES ${CMAKE_CURRENT_BINARY_DIR}/telink_wrapper.so DESTINATION ${PyInstallDir}/pytelink )
	install( FILES ${CMAKE_CURRENT_BINARY_DIR}/__init__.py DESTINATION ${PyInstallDir}/pytelink )
  
ENDIF()
